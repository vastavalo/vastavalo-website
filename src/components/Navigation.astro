---
import { imageConfig } from "astro:assets";
import {
  translations,
  type Language,
  getLanguageFromUrl,
  languageNames,
} from "lib/i18n";

const lang = getLanguageFromUrl(Astro.url);

const pages = {
  fi: {
    membership: "/",
    darkroom: "/pimio/",
    people: "/ihmiset/",
    links: "/linkit/",
  },
  en: {
    membership: "/en/",
    darkroom: "/en/darkroom/",
    people: "/en/people/",
    links: "/en/links/",
  },
} as const;

function createPageLinks(lang: Language) {
  const t = translations[lang];
  const p = pages[lang];
  return [
    { text: t.membership, href: p.membership },
    { text: t.darkroom, href: p.darkroom },
    { text: t.people, href: p.people },
    { text: t.links, href: p.links },
  ] as const;
}

const langSwitcher = {
  fi: { text: languageNames.en, href: pages.en.membership },
  en: { text: languageNames.fi, href: pages.fi.membership },
} as const;

const isActive = (href: string) => href === Astro.url.pathname;
---

<nav
  class="container mx-auto flex flex-row flex-wrap items-center gap-2 whitespace-nowrap p-4 text-black dark:text-white"
>
  {
    createPageLinks(lang).map((link) => (
      <a
        href={link.href}
        class:list={[
          "rounded px-4 py-2",
          { "bg-teal-100 dark:bg-teal-900": isActive(link.href) },
        ]}
      >
        {link.text}
      </a>
    ))
  }
  <a href={langSwitcher[lang].href} class="sm:ml-auto">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      class="inline-block h-4 w-4"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M10.5 21l5.25-11.25L21 21m-9-3h7.5M3 5.621a48.474 48.474 0 016-.371m0 0c1.12 0 2.233.038 3.334.114M9 5.25V3m3.334 2.364C11.176 10.658 7.69 15.08 3 17.502m9.334-12.138c.896.061 1.785.147 2.666.257m-4.589 8.495a18.023 18.023 0 01-3.827-5.802"
      ></path>
    </svg>
    {langSwitcher[lang].text}
  </a>
</nav>
